@model ISD.Application.provider.MVC.Models.ServiceImageDetailModel
<div class="row">
    <div class="col-md-12">
        <fieldset>

            @using (Html.BeginForm("EditImage", "Service", FormMethod.Post, new { @Class = "sky-form", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col col-md-4">
                        <div class="headline"><h2>Image Info</h2></div>
                        <ul class="list-unstyled">
                            <li>Image count : @Html.DisplayTextFor(x => x.ImageAmount)</li>
                            <li>Total size  : @Html.DisplayTextFor(x => x.StorageUsed) kb</li>
                            <li>Free storage   : @Html.DisplayTextFor(x => x.FreeStorage) kb</li>
                            @Html.HiddenFor(x => x.FreeStorage, new { @id = "freeStr" })
                            @Html.HiddenFor(x => x.StorageUsed)
                            @Html.HiddenFor(x => x.ActivityID)
                            @Html.HiddenFor(x => x.ID)
                            @Html.HiddenFor(x => x.ImageInfoID)
                            @Html.HiddenFor(x => x.ImageAmount)
                        </ul>
                    </div>
                    <div class="col col-md-8">
                        <div class="col col-md-10">
                            <label for="file" class="input input-file">
                                <div class="button"><input type="file" name="files" id="imgInp" onchange="this.parentNode.nextSibling.value = this.value" multiple>Browse</div><input type="text" readonly="">
                            </label>
                            <div id="uploadStatus">only image files are accepted, maximum upload size per activity are @ISD.Util.SystemConstants.MaxFileSize kb</div>
                        </div>
                        <div class="col col-md-2">
                            <input type="submit" value="Upload" class="btn-u" />
                        </div>
                        <div id="preview" class="row margin-bottom-15">
                        </div>
                    </div>

                </div>
            }
        </fieldset>
        @if (Model.Images != null)
        {
            if (Model.Images.Count() != 0)
            {
                <fieldset>
                    <h4>Current Image</h4>

                    @foreach (var image in Model.Images)
                    {
                        <div class="col-md-3 col-sm-6">
                            <div class="view view-tenth">
                                <img class="img-responsive" src="~/ImageHandler.ashx?PID=@image.ID" alt="">
                            </div>
                        </div>
                    }

                </fieldset>
            }
        }
       
    </div>
</div>


<script>
    function readURL(input) {

        var nBytes = 0,
        oFiles = input.files.length,
        fileList = document.getElementById("preview");
        fileList.innerHTML = "";

        for (var i = 0; i < input.files.length; i++) {
            if (input.files && input.files[i]) {
                var reader = new FileReader();

                var divList = document.createElement("div");
                divList.className = "col-md-3 col-sm-6 ";
                fileList.appendChild(divList);

                var span = document.createElement("span");
                span.className = "overlay-zoom";
                divList.appendChild(span);

                var img = document.createElement("img");
                img.className = "img-responsive";
                img.src = window.URL.createObjectURL(input.files[i]);
                img.height = 60;
                img.onload = function (e) {
                    window.URL.revokeObjectURL(this.src);


                }
                span.appendChild(img);
                var info = document.createElement("span");
                var fileSize = 0;
                for (var aMultiples = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], nMultiple = 0, nApprox = input.files[i].size / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {
                    fileSize = nApprox.toFixed(3) + " " + aMultiples[nMultiple];
                }
                info.innerHTML = input.files[i].name + ": " + fileSize;
                span.appendChild(info);

                nBytes += input.files[i].size;

                reader.onload = function (e) {
                    $('#preview').attr('src', e.target.result);
                    $('#preview').show()
                }
            }
        }
        var sOutput = nBytes + " bytes";
        // optional code for multiples approximation
        for (var aMultiples = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {
            sOutput = nApprox.toFixed(3) + " " + aMultiples[nMultiple] + " (" + nBytes + " bytes)";
        }
        var status = document.getElementById("uploadStatus");
        var freeStr = document.getElementById('freeStr').value;
        if ((nBytes / 1024) > freeStr) {
            sOutput = "File size exceeded " + sOutput;
            status.className = "note note-error text-danger";
        }
        status.innerHTML = sOutput;
    }

    $("#imgInp").change(function () {
        readURL(this);
    });
</script>


