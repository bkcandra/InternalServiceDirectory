@using Microsoft.Ajax.Utilities
@using ISD.Util
@model ISD.Application.provider.MVC.Models.ServiceDetailModel

@{
    ViewBag.Title = "Create new Service";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var clinic = new ISD.Data.EDM.ISDEntities().Clinic.ToList();
}
@Styles.Render("~/assets/plugins/sky-forms/version-2.0.1/css/custom-sky-forms.css")
@Styles.Render("~/assets/plugins/fancybox/source/jquery.fancybox.css")

<div class="breadcrumbs">
    <div class="container">
        <h1 class="pull-left">Service Editor</h1>
        <ul class="pull-right breadcrumb">
            <li>
                <asp:HyperLink ID="HyperLink1" runat="server" NavigateUrl="~">Home</asp:HyperLink>
            </li>
            <li>Service</li>
            <li class="active">Create</li>
        </ul>
    </div>
</div>
<div class="container content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Create", "Service", FormMethod.Post, new { @Class = "sky-form", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <fieldset>
                    <h4>Activity Detail</h4>
                    <div class="row">
                        <section class="col col-md-12">
                            <label class="input">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @placeholder = "Service name" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-4">
                            <label class="input">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Email", @type = "email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </label>
                        </section>
                        <section class="col col-md-4">
                            <label class="input">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @placeholder = "Phone" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </label>
                        </section>
                        <section class="col col-md-4">
                            <label class="input">
                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @placeholder = "Service Website (Optional)" } })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label class="input">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Service Address" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>
                    <div class="row">
                        <section class="col col-md-5">
                            <label class="select">
                                @Html.DropDownListFor(model => model.SuburbID,
                                    new SelectList(Model.SuburbList,
                  "Value", "Text",
                  Model.SuburbList.First().Value))
                                @Html.ValidationMessageFor(model => model.SuburbID, "", new { @class = "text-danger" })
                                <i></i>
                            </label>
                        </section>
                        <section class="col col-md-4">
                            <label class="select">
                                @Html.DropDownListFor(model => model.StateID,
                         new SelectList(Model.StatesList,
                             "Value", "Text",
                             Model.StatesList.First().Value))
                                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                                <i></i>
                            </label>
                        </section>
                        <section class="col col-md-3">
                            <label class="input">
                                @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @placeholder = "Post code", @maxlength = "4", @onkeypress = "return CheckNumber(event)" } })
                                @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                            </label>
                        </section>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <div class="col-md-6">
                            <h5>How would you describe your service</h5>
                            <label class="textarea">
                                @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @placeholder = "Service description", @rows = "4" } })
                                @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                            </label>
                        </div>
                        <div class="col-md-6">
                            <h5>What is the cost of your activity.</h5>
                            <label class="textarea">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @placeholder = "Pricing", @rows = "4" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <h5>Is there requirements for this service</h5>
                            <div class="col col-6">
                                <label class="radio state-success"><input type="radio" name="Eligibility" value="true" id="enableEl" class="radio" /><i class="rounded-x"></i> Yes</label>
                            </div>
                            <div class="col col-6">
                                <label class="radio state-success"><input type="radio" name="Eligibility" value="false" id="DisableEl" class="radio" checked="checked" /><i class="rounded-x"></i> No requirement for this service  </label>
                            </div>
                        </div>
                    </div>
                    <div id="divRequirements" class="row">
                        <section class="col col-md-12">
                            <label class="label">Requirements</label>
                            <div class="row">
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="MedicareCard" value="false" id="MedicareCard"><i></i>Medicare card is required
                                    </label>
                                </div>
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="HealthcareCard" value="false" id="HealthcareCard"><i></i>Healthcare card is required
                                    </label>
                                </div>
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="Pensioner" value="false" id="Pensioner"><i></i>Client is a pensioner
                                    </label>
                                </div>
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="CityofBoroondara" value="false" id="CityofBoroondara"><i></i>Is City of Boroondara residence
                                    </label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="CityofYarra" value="false" id="CityofYarra"><i></i>Is City of Yarra residence
                                    </label>
                                </div>
                                <div class="col col-3">
                                    <label class="checkbox">
                                        <input type="checkbox" name="HACC" value="false" id="HACC"><i></i>HACC eligible
                                    </label>
                                </div>
                            </div>
                        </section>
                        <section class="col col-md-12">
                            <label class="textarea">
                                Assessment
                                @Html.EditorFor(model => model.Assessment, new { htmlAttributes = new { @placeholder = "Assessment detail", @rows = "4" } })
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-md-12">
                            <label class="textarea">
                                Note
                                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @placeholder = "Note for this service", @rows = "4" } })
                            </label>
                        </section>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <div class="col col-md-12">
                            <h5>Select your service category</h5>
                            @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col col-md-12">
                            <div class="panel-group acc-v1" id="accordion-1">
                                @foreach (var cat in Model.Categories.Where((x => x.Level == 0)))
                                {
                                    <div class="col col-md-6">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">
                                                <h4 class="panel-title">
                                                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-1" href="#collapse-@cat.ID">
                                                        @cat.Name
                                                    </a>
                                                </h4>
                                            </div>
                                            <div id="collapse-@cat.ID" class="panel-collapse collapse">
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            @foreach (var subCat in Model.Categories.Where((x => x.Level == 1)))
                                                            {
                                                                if (subCat.Level1ParentID == cat.ID && subCat.Name != "Other")
                                                                { <div class="col col-md-6">
                                                                    <label>
                                                                        <input type="checkbox"
                                                                               name="SelectedCategory"
                                                                               value="@subCat.ID" />
                                                                        <span>@subCat.Name</span>
                                                                    </label>
                                                                </div>
                                                                }
                                                            }
                                                            @{
                                                            var subOther = Model.Categories.Where((x => x.Level1ParentID == cat.ID && x.Name == "Other")).FirstOrDefault();
                                                            if (subOther != null)
                                                            {
                                                                <div class="col col-md-6">
                                                                    <label>
                                                                        <input type="checkbox"
                                                                               name="SelectedCategory"
                                                                               value="@subOther.ID" />
                                                                        <span>@subOther.Name</span>
                                                                    </label>
                                                                </div>
                                                            }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Select clinicians for this service</h5>
                            @Html.ValidationMessageFor(model => model.SelectedClinicians, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <a class="btn-u btn-sm" href="@Url.Content("~/Clinician/Create")" target="_blank">Create new Clinician</a>
                            <div id="modal-createClinician" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                                            <h4 id="myLargeModalLabel" class="modal-title">New Clinician</h4>
                                        </div>
                                        <div class="modal-body">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="ServiceClinicianList" class="col-md-12">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Saved as</th>
                                                <th>Phone</th>
                                                <th>Email</th>
                                                <th>Type</th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.CliniciansList)
                                            {
                                                <tr>
                                                    <td>
                                                        <label>
                                                            <input type="checkbox"
                                                                   name="SelectedClinicians"
                                                                   value="@item.ID" />
                                                            <span></span>
                                                        </label>
                                                    </td>
                                                    <td>@item.SavedName</td>
                                                    <td>@item.Phone</td>
                                                    <td>@item.Email</td>
                                                    @if (item.Type == (int)SystemConstants.CliniciansType.Private)
                                                    {
                                                        <td>Private</td>
                                                    }
                                                    @if (item.Type == (int)SystemConstants.CliniciansType.Public)
                                                    {
                                                        <td>Public</td>
                                                    }
                                                    @if (item.Type == (int)SystemConstants.CliniciansType.Both)
                                                    {
                                                        <td>Public and Private</td>
                                                    }
                                                    <td>

                                                        <button class="btn-u" data-toggle="modal" data-target="#modal-@item.ID">See details</button>
                                                        <div id="modal-@item.ID" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                                                            <div class="modal-dialog modal-lg">
                                                                <div class="modal-content">
                                                                    <div class="modal-header">
                                                                        <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                                                                        <h4 id="myLargeModalLabel" class="modal-title">Clinician Details</h4>
                                                                    </div>
                                                                    <div class="modal-body">
                                                                        <div class="row">
                                                                            <div class="col-md-6">
                                                                                <strong>Name</strong><br />
                                                                                @item.Name
                                                                            </div>
                                                                            <div class="col-md-6">

                                                                                @{
                                                    var locs = item.Location.Split('|');
                                                    var locString = "";

                                                    foreach (var loc in locs)
                                                    {

                                                        locString += " " + @clinic.Where(x => x.ID == Convert.ToInt32(loc)).FirstOrDefault().Name + ",";
                                                    }
                                                    if (!string.IsNullOrEmpty(locString))
                                                    {

                                                        locString = locString.Remove(locString.Length - 1, 1);
                                                        int index = locString.LastIndexOf(",");
                                                        if (index != -1)
                                                        {
                                                            locString = locString.Remove(index, 1);
                                                            locString = locString.Insert(index, " and");
                                                        }
                                                    }
                                                                                }

                                                                                <strong>Clinics</strong><br />@locString

                                                                            </div>
                                                                        </div><br />



                                                                        @if (!string.IsNullOrEmpty(@item.Specialties))
                                                                        {
                                                                            <div class="row">
                                                                                <div class="col-md-12">
                                                                                    <strong>
                                                                                        Specialties
                                                                                    </strong>
                                                                                </div>
                                                                            </div>
                                                                            <div class="row">
                                                                                <div class="col-md-12">
                                                                                    @item.Specialties
                                                                                </div>
                                                                            </div>
                                                                            <br />
                                                                        }
                                                                        @if (item.TimetableType == 1)
                                                                        { <div class="row">
                                                                            <div class="col-md-12">
                                                                                <strong>
                                                                                    Timetable Details
                                                                                </strong>
                                                                                @{
                                                                            var tts = new ISD.Data.EDM.ISDEntities().ClinicianTimetable.Where(x => x.ClinicianID == item.ID).ToList();
                                                                            foreach (var tt in tts)
                                                                            {
                                                                                string days = "";
                                                                                if (tt.OnMonday ?? false)
                                                                                {
                                                                                    days += "Monday,";
                                                                                }
                                                                                if (tt.OnTuesday ?? false)
                                                                                {
                                                                                    days += " Tuesday,";
                                                                                }
                                                                                if (tt.OnWednesday ?? false)
                                                                                {
                                                                                    days += " Wednesday,";
                                                                                }
                                                                                if (tt.OnThursday ?? false)
                                                                                {
                                                                                    days += " Thursday,";
                                                                                }
                                                                                if (tt.OnFriday ?? false)
                                                                                {
                                                                                    days += " Friday,";
                                                                                }
                                                                                if (tt.OnSaturday ?? false)
                                                                                {
                                                                                    days += " Saturday,";
                                                                                }
                                                                                if (tt.OnSunday ?? false)
                                                                                {
                                                                                    days += " Sunday,";
                                                                                }
                                                                                if (!string.IsNullOrEmpty(days))
                                                                                {
                                                                                    days = days.Remove(days.Length - 1, 1);
                                                                                    int index = days.LastIndexOf(",");
                                                                                    if (index != -1)
                                                                                    {
                                                                                        days = days.Remove(index, 1);
                                                                                        days = days.Insert(index, " and");
                                                                                    }
                                                                                    //Modal Content
                                                                                    <div class="row">


                                                                                        <div class="col-md-3">
                                                                                            @clinic.Where(x => x.ID == tt.LocationID).FirstOrDefault().Name
                                                                                        </div>
                                                                                        <div class="col-md-3">

                                                                                            @if (@tt.RecurEvery == (int)SystemConstants.RecurrenceSchedule.Weekly)
                                                                                            {
                                                                                                <label>Weekly</label>
                                                                                            }
                                                                                            @if (@tt.RecurEvery == (int)SystemConstants.RecurrenceSchedule.Fortnightly)
                                                                                            {
                                                                                                <label>Fortnight</label>
                                                                                            }
                                                                                            @if (@tt.RecurEvery == (int)SystemConstants.RecurrenceSchedule.Monthly)
                                                                                            {
                                                                                                <label>Monthly</label>
                                                                                            }
                                                                                            @if (@tt.RecurEvery == (int)SystemConstants.RecurrenceSchedule.NotRecurring)
                                                                                            {
                                                                                                <label>Not Recurring / Temporary</label>
                                                                                            }
                                                                                        </div>
                                                                                        <div class="col-md-6">@days</div>

                                                                                    </div>

                                                                                    //End Modal Content
                                                                                }
                                                                            }
                                                                                }
                                                                            </div>
                                                                        </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <label>Contact us for availability</label>
                                                                        }

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>


                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                </div>
                            </div>

                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <div class="col-md-12">
                            <section class="col col-md-12">
                                <label class="textarea">
                                    @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @placeholder = "Service Keywords", @row = "3" } })
                                    @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                                </label>
                            </section>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row">
                        <section class="col col-md-12">
                            <label for="file" class="input input-file">
                                <div class="button"><input type="file" name="files" id="imgInp" onchange="this.parentNode.nextSibling.value = this.value" multiple>Browse</div><input type="text" readonly="">
                            </label>
                            <div id="uploadStatus">only image files are accepted, maximum upload size per activity are @SystemConstants.MaxFileSize kb</div>
                        </section>
                    </div>
                    <div id="preview" class="row margin-bottom-15">
                    </div>
                </fieldset>
                <fieldset>
                    <div class="col-md-offset-8 col-md-4">
                        <input type="submit" value="create" class="btn-u" />&nbsp;&nbsp;
                        @Html.ActionLink("Cancel", "", "Services", null, new { @class = "btn-u btn-u-red" })
                    </div>
                </fieldset>
            }
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/bcHandler.js")
    @Scripts.Render("~/assets/plugins/fancybox/source/jquery.fancybox.pack.js")

}
<script>
    $("input[name$='Eligibility']").change(
function (e) {
    CheckRequirements();
});

    $(document).ready(function () {
        CheckRequirements();
    });

    function CheckRequirements() {
        if ($("#enableEl").is(':checked')) {
            $("#divRequirements").fadeIn();

        }
        else {
            $("#divRequirements").fadeOut();
        }
    }

    $("input[type=checkbox][name=SelectedCategory]").click(function () {

        var bol = $("input[type=checkbox][name=SelectedCategory]:checked").length >= 5;
        $("input[type=checkbox][name=SelectedCategory]").not(":checked").attr("disabled", bol);

    });

    jQuery(document).ready(function () {
        App.initFancybox();
    });

    function readURL(input) {

        var nBytes = 0,
        oFiles = input.files.length,
        fileList = document.getElementById("preview");
        fileList.innerHTML = "";

        for (var i = 0; i < input.files.length; i++) {
            if (input.files && input.files[i]) {
                var reader = new FileReader();

                var divList = document.createElement("div");
                divList.className = "col-md-3 col-sm-6 ";
                fileList.appendChild(divList);

                var span = document.createElement("span");
                span.className = "overlay-zoom";
                divList.appendChild(span);

                var img = document.createElement("img");
                img.className = "img-responsive";
                img.src = window.URL.createObjectURL(input.files[i]);
                img.height = 60;
                img.onload = function (e) {
                    window.URL.revokeObjectURL(this.src);


                }
                span.appendChild(img);
                var info = document.createElement("span");
                info.innerHTML = input.files[i].name + ": " + input.files[i].size + " bytes";
                span.appendChild(info);

                nBytes += input.files[i].size;

                reader.onload = function (e) {
                    $('#preview').attr('src', e.target.result);
                    $('#preview').show()
                }
            }
        }
        var sOutput = nBytes + " bytes";
        // optional code for multiples approximation
        for (var aMultiples = ["KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"], nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {
            sOutput = nApprox.toFixed(3) + " " + aMultiples[nMultiple] + " (" + nBytes + " bytes)";
        }
        var status = document.getElementById("uploadStatus");
        if ((nBytes / 1024) > 1024) {
            sOutput = "File size exceeded " + sOutput;
            status.className = "note note-error text-danger";
        }
        status.innerHTML = sOutput;
    }

    $("#imgInp").change(function () {
        readURL(this);
    });
</script>

