@using System.Web.UI.WebControls
@using MoreLinq;
@model IEnumerable<ISD.Data.EDM.v_ActivityExplorer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var state = new ISD.Data.EDM.ISDEntities().State.AsEnumerable();
    var clinic = new ISD.Data.EDM.ISDEntities().Clinic.AsEnumerable();
    var ACExplorer = new ISD.Data.EDM.ISDEntities().v_ActivityClinicianExplorer.AsEnumerable();
    var CTExplorer = new ISD.Data.EDM.ISDEntities().ClinicianTimetable.AsEnumerable();
}

<div class="breadcrumbs">
    <div class="container">
        <h1 class="pull-left">Services management</h1>
        <ul class="pull-right breadcrumb">
            <li>
                <asp:HyperLink ID="HyperLink1" runat="server" NavigateUrl="~">Home</asp:HyperLink>
            </li>
            <li class="active">Services management</li>
        </ul>
    </div>
</div>
<div class="container content">
    <div class="row blog-page">
        <!-- Left Sidebar -->
        <div class="col-md-3">
           @Html.Partial("_PartialListingSidebar")
        </div>
        <!-- End Left Sidebar -->
        <!-- Right Sidebar -->
        <div class="col-md-9">
            @*<div class="row">
                    <div class="col-md-6 text-left">
                        @{
                            if (Model.Count() == 0)
                            {
                                <span>Showing: 0 - @(((PagedList.IPagedList)Model).LastItemOnPage) of @(((PagedList.IPagedList)Model).TotalItemCount) services</span>

                            }
                            else
                            {
                                <span>Showing: @(((PagedList.IPagedList)Model).FirstItemOnPage) - @(((PagedList.IPagedList)Model).LastItemOnPage) of @(((PagedList.IPagedList)Model).TotalItemCount) services</span>
                            }
                        }
                    </div>
                    <div class="col col-md-5  text-right">
                        <label class="select">
                            @Html.DropDownListFor(model => model.pageSize,
                                                              new SelectList(ShowNumber,
                                            "Value", "Text",
                                                              Model.Show.First().Value), new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, @onchange = "location = pageSize=this.value;" })
                            <i></i>
                        </label>
                    </div>
                </div>*@
            @foreach (var item in Model)
            {
                <div class="funny-boxes funny-boxes-top-sea ">
                    <div class="row" style="text-align: right; float: right">
                        <div class="col-md-12">
                            @Html.ActionLink("Edit", "edit", "service", new { id = item.ID }, new { @class = "btn btn-warning btn-sm right" })
                            @Html.ActionLink("Delete", "delete", "service", new { id = item.ID }, new { @class = "btn btn-danger btn-sm right" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 funny-boxes-img">
                            @{
                int imageinfo = new ISD.Data.EDM.ISDEntities().ActivityImage.Where(x => x.ActivityID == item.ID).Select(x => x.ID).FirstOrDefault();
                var image = new ISD.Data.EDM.ISDEntities().ActivityImageDetail.Where(x => x.ActivityImageID == imageinfo).FirstOrDefault();
                if (image == null)
                {
                            <img src="@Url.Content("~/Assets/img/demo.jpg")" class="img-responsive" />
                }
                if (image != null)
                {
                            <img src="~/ImageHandler.ashx?PID=@image.ID" class="img-responsive" />
                }
                            }
                        </div>
                        <div class="col-md-8 ">

                            <h2>
                                @Html.ActionLink(item.Name, "Index", "Service", new { id = item.ID, name = item.Name.Replace(" ", string.Empty) }, null)
                            </h2>

                            <p>
                                @Html.Label("", item.FullDescription.Length > 250 ? item.FullDescription.Substring(0, 250) : item.FullDescription)
                                @Html.ActionLink("Read more", "Index", "Service", new { id = item.ID, name = item.Name.Replace(" ", string.Empty) }, null)
                            </p>
                            <p>
                                <uc1:ScheduleViewerUC runat="server" ID="ScheduleViewerUC" />
                            </p>
                            <p>
                                <asp:Image ID="imgStatus" runat="server" class="img-responsive right" ImageUrl="~/Assets/img/demo.jpg" />
                                <asp:Label ID="lblExpiryDate" runat="server" CssClass="right" Text="Expiry on"></asp:Label>
                                <asp:Label ID="lblStatus" runat="server" Text="" CssClass="right"></asp:Label>
                                <asp:Label ID="lblType" runat="server" Text="" CssClass="right"></asp:Label>
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 funny-boxes-img">
                            <ul class="list-unstyled">
                                <li><i class="fa fa-briefcase"></i>@item.ProviderName</li>
                            </ul>
                        </div>
                        <div class="col-md-8">

                            @{
                var aps = ACExplorer.Where(x => x.ActivityID == item.ID).DistinctBy(x => x.ClinicianID);
                foreach (var ap in aps)
                {
                    var cts = CTExplorer.Where(x => x.ClinicianID == ap.ClinicianID);

                    foreach (var ct in cts)
                    {
                        if (ct.LocationID != null)
                        {
                            var cInfo = clinic.Where(c => c.ID == ct.LocationID.Value).FirstOrDefault();

                            <button class="btn btn-u btn-sm" data-toggle="modal" data-target="#modal-@ct.ID">@cInfo.Name</button>
                            <div id="modal-@ct.ID" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" style="display: none;">
                                <div class="modal-dialog modal-sm">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                                            <h4 id="myLargeModalLabel" class="modal-title">@cInfo.Name</h4>
                                        </div>
                                        <div class="modal-body">
                                            <strong>Address</strong>
                                            <p>
                                                @cInfo.Address
                                                <br />
                                                @cInfo.Suburb
                                                @state.Where(s => s.ID == cInfo.StateID).Select(s => s.StateName).FirstOrDefault(), @cInfo.PostCode
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
                            }
                        </div>
                    </div>
                </div>
            }
            @if (Model.Count() == 0)
            {
                <div class="funny-boxes funny-boxes-top-sea ">
                    <div class="row">
                        No Services found
                    </div>
                </div>
            }
            @*<div class="row">
                    <div class="col-md-6 text-left">
                        @{
                            if (Model.Count() == 0)
                            {
                                <span>Showing: 0 - @(((PagedList.IPagedList)Model).LastItemOnPage) of @(((PagedList.IPagedList)Model).TotalItemCount) services</span>

                            }
                            else
                            {
                                <span>Showing: @(((PagedList.IPagedList)Model).FirstItemOnPage) - @(((PagedList.IPagedList)Model).LastItemOnPage) of @(((PagedList.IPagedList)Model).TotalItemCount) services</span>
                            }
                        }
                    </div>
                    <div class="col-md-5 text-right">
                        @Html.PagedListPager((PagedList.IPagedList)Model.services, page => Url.Action("Index", new { page = page, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = Model.pageSize }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET" }))
                    </div>
                </div>*@
            <!-- Bordered Funny Boxes -->
        </div>
        <!-- End Right Sidebar -->
    </div>
</div>
