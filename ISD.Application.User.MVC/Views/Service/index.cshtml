@model ISD.Application.User.MVC.Models.ServiceDetailModel
@{
    ViewBag.Title = @Model.Name + " | Service Details";
    ViewBag.PageSection = "Service";
    ViewBag.Page = @Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Requirements = new ISD.Data.EDM.ISDEntities().Requirements;
}

<div class="container content">
    <p class="text-right">
        @Html.ActionLink("Back to List", "", "Services")
    </p>
    <div class="row portfolio-item margin-bottom-25">
        <!-- Content Info -->
        <div class="col-md-6 md-margin-bottom-40">
            <h2>@Model.Name</h2>
            <p>@Html.DisplayFor(model => model.FullDescription)</p>
            <div class="row">
                <div class="col-md-6">
                    <h2 class="heading-sm">Eligibility</h2>
                    <dl>
                        

                        @{
                            if (@Model.Eligibility ?? false)
                            {
                                if (!string.IsNullOrEmpty(Model.Requirements))
                                {
                                    <dt>Requirement</dt>
                                    <dd>
                                        <ul>
                                            @{
                                    var reqArr = Model.Requirements.Split('&');
                                    foreach (var req in reqArr)
                                    {
                                        <li>
                                            @{
                                        var orReqs = req.ToCharArray();
                                        System.Text.StringBuilder sb = new System.Text.StringBuilder();
                                        foreach (var orReq in orReqs)
                                        {
                                            if (Char.IsSymbol(orReq))
                                            {
                                                if (orReq == '|')
                                                { sb.Append(" or "); }
                                                if (orReq == '&')
                                                { sb.Append(" and "); }
                                            }
                                            if (Char.IsDigit(orReq))
                                            {
                                                int id = Convert.ToInt32(Char.GetNumericValue(orReq));
                                                var sReq = Requirements.Where(x => x.ID == id).FirstOrDefault();
                                                sb.Append(sReq.Text);
                                            }
                                        }
                                        <span>@sb.ToString()</span>
                                            }
                                        </li>
                                    }
                                            }
                                        </ul>
                                    </dd>
                                }
                            }
                            else
                            {
                                <dd>No requirement for this service. Please see note for more details</dd>
                            }
                        }

                        @{
                            if (!string.IsNullOrEmpty(@Model.Note))
                            {
                                <dt> Note </dt>
                                <dd>@Model.Note</dd>
                            }
                            if (!string.IsNullOrEmpty(@Model.Assessment))
                            {
                                <dt>Assessment</dt>
                                <dd>@Model.Assessment</dd>
                            }
                        }

                    </dl>
                </div>
                <div class="col-md-6">
                    @{if (!string.IsNullOrEmpty(@Model.Price))
                    {
                    <h2 class="heading-sm">Pricing</h2>

                    <dd class="margin-bottom-5">@Model.Price</dd>
                    }
                    }
                    <h2 class="heading-sm">Address</h2>
                    <address>
                        <strong>@Html.DisplayFor(model => model.ProviderName)</strong><br>
                        @Html.DisplayFor(model => model.Address)<br>
                        @Html.DisplayFor(model => model.Suburb), @Model.StateName @Model.PostCode<br>
                        <abbr title="Phone">P:</abbr> @Html.DisplayFor(model => model.PhoneNumber)
                    </address>
                    @{if (!string.IsNullOrEmpty(Model.Website))
                    {
                    <address>
                        <strong>Our site</strong><br>
                        <a href="http://@Model.Website">@Model.Website</a>
                    </address>
                    }
                    }
                </div>
            </div><!--/row-->
        </div>
        <!-- End Content Info -->
        <!--tagbox-->
        <!-- Carousel -->
        <div class="col-md-6">
            <div class="row margin-bottom-10">
                @Html.Partial("_PartialServiceImageView", Model.Images)
            </div>
            <div class="row margin-bottom-10" style=" text-align:center">
                <button class="btn btn-u btn-u-blue" data-toggle="modal" data-target="#serviceInformation">Copy information to medical director</button>
            </div>
            <div class="modal fade" id="serviceInformation" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                            <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                        </div>
                        <div class="modal-body">
                            <div class="col-md-4">Service Required :</div>
                            <div class="col-md-offset-2 col-md-8">
                                @Model.Name
                            </div>
                            <div class="col-md-4">Requirements :</div>
                            <div class="col-md-offset-2 col-md-8">


                                @{
                                    if (@Model.Eligibility ?? false)
                                    {
                                        if (!string.IsNullOrEmpty(Model.Requirements))
                                        {
                                    
                                            <dd>
                                                <ul>
                                                    @{
                                            var reqArr = Model.Requirements.Split('&');
                                            foreach (var req in reqArr)
                                            {
                                                <li>
                                                    @{
                                                var orReqs = req.ToCharArray();
                                                System.Text.StringBuilder sb = new System.Text.StringBuilder();
                                                foreach (var orReq in orReqs)
                                                {
                                                    if (Char.IsSymbol(orReq))
                                                    {
                                                        if (orReq == '|')
                                                        { sb.Append(" or "); }
                                                        if (orReq == '&')
                                                        { sb.Append(" and "); }
                                                    }
                                                    if (Char.IsDigit(orReq))
                                                    {
                                                        int id = Convert.ToInt32(Char.GetNumericValue(orReq));
                                                        var sReq = Requirements.Where(x => x.ID == id).FirstOrDefault();
                                                        sb.Append(sReq.Text);
                                                    }
                                                }
                                                        <span>@sb.ToString()</span>
                                                    }
                                                </li>
                                            }
                                                    }
                                                </ul>
                                            </dd>
                                        }
                                    }
                                    else
                                    {
                                        <dd>No requirement for this service. Please see note for more details</dd>
                                    }
                                }
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>


        <!-- End Carousel -->
        @*<div class="col-md-12">
                @Html.Partial("_PartialServices", Model.Services)
            </div>*@
        <div class="col-md-12">
            @Html.Partial("_PartialServiceClinicians", Model.Clinicians)

        </div>

    </div><!--/row-->
    <p class="text-right">
        @Html.ActionLink("Edit Primary", "Edit", new { id = Model.ID }) |
        @Html.ActionLink("Back to List", "", "Services")
    </p>
    <div class="margin-bottom-20 clearfix"></div>
</div>
