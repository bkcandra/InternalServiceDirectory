@using PagedList;
@using PagedList.Mvc;
@using MoreLinq;
@{
    @model ISD.Application.User.MVC.Models.ServicesFinderModel
    var state = new ISD.Data.EDM.ISDEntities().State.AsEnumerable();
    var clinics = new ISD.Data.EDM.ISDEntities().Clinic.AsEnumerable();
    List<ISD.Data.EDM.v_ActivityClinicianExplorer> ACExplorer = new ISD.Data.EDM.ISDEntities().v_ActivityClinicianExplorer.ToList();

    var CTExplorer = new ISD.Data.EDM.ISDEntities().ClinicianTimetable.AsEnumerable();

    var ShowNumber = new List<System.Web.UI.WebControls.ListItem>();
    ShowNumber.Add(new System.Web.UI.WebControls.ListItem()
    {
        Text = "5",
        Value = @Url.Action("Index", new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = 5 })
    });
    ShowNumber.Add(new System.Web.UI.WebControls.ListItem()
    {
        Text = "10",
        Value = @Url.Action("Index", new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = 10 })
    });
    ShowNumber.Add(new System.Web.UI.WebControls.ListItem()
    {
        Text = "25",
        Value = @Url.Action("Index", new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = 25 })
    });
    ShowNumber.Add(new System.Web.UI.WebControls.ListItem()
    {
        Text = "50",
        Value = @Url.Action("Index", new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = 50 })
    });
}

<div class="row">
    <div class="col-md-6 text-left">
        @{
            if (Model.services.Count() == 0)
            {
                <span>Showing: 0 - @(((PagedList.IPagedList)Model.services).LastItemOnPage) of @(((PagedList.IPagedList)Model.services).TotalItemCount) services</span>

            }
            else
            {
                <span>Showing: @(((PagedList.IPagedList)Model.services).FirstItemOnPage) - @(((PagedList.IPagedList)Model.services).LastItemOnPage) of @(((PagedList.IPagedList)Model.services).TotalItemCount) services</span>
            }
        }
    </div>
    <div class="col col-md-5  text-right">
        <label class="select">
            @Html.DropDownListFor(model => model.pageSize,
                                                          new SelectList(ShowNumber,
                                        "Value", "Text",
                                                          Model.Show.First().Value), new { page = 1, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, @onchange = "location = pageSize=this.value;" })
            <i></i>
        </label>
    </div>
</div>
@foreach (var item in Model.services)
{
    <div class="funny-boxes funny-boxes-top-sea ">
        <div class="row">
            <div class="col-md-4 funny-boxes-img">
                @{
    int imageinfo = new ISD.Data.EDM.ISDEntities().ActivityImage.Where(x => x.ActivityID == item.ID).Select(x => x.ID).FirstOrDefault();
    var image = new ISD.Data.EDM.ISDEntities().ActivityImageDetail.Where(x => x.ActivityImageID == imageinfo).FirstOrDefault();
    if (image == null)
    {
                <img src="@Url.Content("~/Assets/img/demo.jpg")" class="img-responsive" />
    }
    if (image != null)
    {
                <img src="~/ImageHandler.ashx?PID=@image.ID" class="img-responsive" />
    }
                }
            </div>
            <div class="col-md-8">

                <h2>
                    @Html.ActionLink(item.Name, "Index", "Service", new { id = item.ID, name = item.Name.Replace(" ", string.Empty) }, null)
                </h2>
                <p>
                    @Html.Label("", item.FullDescription.Length > 250 ? item.FullDescription.Substring(0, 250) : item.FullDescription)
                    @Html.ActionLink("Read more", "Index", "Service", new { id = item.ID, name = item.Name.Replace(" ", string.Empty) }, null)
                </p>
                <p>
                    <uc1:ScheduleViewerUC runat="server" ID="ScheduleViewerUC" />
                </p>
                <p>
                    <asp:Image ID="imgStatus" runat="server" class="img-responsive right" ImageUrl="~/Assets/img/demo.jpg" />
                    <asp:Label ID="lblExpiryDate" runat="server" CssClass="right" Text="Expiry on"></asp:Label>
                    <asp:Label ID="lblStatus" runat="server" Text="" CssClass="right"></asp:Label>
                    <asp:Label ID="lblType" runat="server" Text="" CssClass="right"></asp:Label>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 funny-boxes-img">
                <ul class="list-unstyled">
                    <li><i class="fa fa-briefcase"></i>@item.ProviderName</li>
                </ul>
            </div>
            <div class="col-md-8">

                @{
    var aps = ACExplorer.Where(x => x.ActivityID == item.ID).DistinctBy(x => x.ClinicianID);
    foreach (var ap in aps)
    {
        var cts = CTExplorer.Where(x => x.ClinicianID == ap.ClinicianID);

        foreach (var ct in cts)
        {
            if (ct.LocationID != null)
            {
                var cInfo = clinics.Where(c => c.ID == ct.LocationID.Value).FirstOrDefault();

                <button class="btn btn-u btn-sm" data-toggle="modal" data-target="#modal-@ct.ID">@cInfo.Name</button>
                <div id="modal-@ct.ID" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" style="display: none;">
                    <div class="modal-dialog modal-sm">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                                <h4 id="myLargeModalLabel" class="modal-title">@cInfo.Name</h4>
                            </div>
                            <div class="modal-body">
                                <strong>Address</strong>
                                <p>
                                    @cInfo.Address
                                    <br />
                                    @cInfo.Suburb
                                    @state.Where(s => s.ID == cInfo.StateID).Select(s => s.StateName).FirstOrDefault(), @cInfo.PostCode
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
                }
            </div>

        </div>
    </div>
}
@if (Model.services.Count() == 0)
{
    <div class="funny-boxes funny-boxes-top-sea ">
        <div class="row">
            No Services found
        </div>
    </div>
}
<div class="row">
    <div class="col-md-6 text-left">
        @{
            if (Model.services.Count() == 0)
            {
                <span>Showing: 0 - @(((PagedList.IPagedList)Model.services).LastItemOnPage) of @(((PagedList.IPagedList)Model.services).TotalItemCount) services</span>

            }
            else
            {
                <span>Showing: @(((PagedList.IPagedList)Model.services).FirstItemOnPage) - @(((PagedList.IPagedList)Model.services).LastItemOnPage) of @(((PagedList.IPagedList)Model.services).TotalItemCount) services</span>
            }
        }
    </div>
    <div class="col-md-5 text-right">
        @Html.PagedListPager((PagedList.IPagedList)Model.services, page => Url.Action("Index", new { page = page, category = Model.selectedCategory, clinic = Model.selectedClinic, search = Model.searchQuery, pageSize = Model.pageSize }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET" }))
    </div>
</div>
<!-- Bordered Funny Boxes -->
